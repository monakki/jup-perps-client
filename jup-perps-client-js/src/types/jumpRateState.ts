/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type JumpRateState = {
  minRateBps: bigint
  maxRateBps: bigint
  targetRateBps: bigint
  targetUtilizationRate: bigint
}

export type JumpRateStateArgs = {
  minRateBps: number | bigint
  maxRateBps: number | bigint
  targetRateBps: number | bigint
  targetUtilizationRate: number | bigint
}

export function getJumpRateStateEncoder(): FixedSizeEncoder<JumpRateStateArgs> {
  return getStructEncoder([
    ['minRateBps', getU64Encoder()],
    ['maxRateBps', getU64Encoder()],
    ['targetRateBps', getU64Encoder()],
    ['targetUtilizationRate', getU64Encoder()],
  ])
}

export function getJumpRateStateDecoder(): FixedSizeDecoder<JumpRateState> {
  return getStructDecoder([
    ['minRateBps', getU64Decoder()],
    ['maxRateBps', getU64Decoder()],
    ['targetRateBps', getU64Decoder()],
    ['targetUtilizationRate', getU64Decoder()],
  ])
}

export function getJumpRateStateCodec(): FixedSizeCodec<
  JumpRateStateArgs,
  JumpRateState
> {
  return combineCodec(getJumpRateStateEncoder(), getJumpRateStateDecoder())
}
