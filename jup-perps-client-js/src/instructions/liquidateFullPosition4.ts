/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  transformEncoder,
  type AccountMeta,
  type AccountSignerMeta,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type Instruction,
  type InstructionWithAccounts,
  type InstructionWithData,
  type ReadonlyAccount,
  type ReadonlySignerAccount,
  type ReadonlyUint8Array,
  type TransactionSigner,
  type WritableAccount,
} from '@solana/kit'
import { PERPETUALS_PROGRAM_ADDRESS } from '../programs'
import { getAccountMetaFactory, type ResolvedAccount } from '../shared'

export const LIQUIDATE_FULL_POSITION4_DISCRIMINATOR = new Uint8Array([
  64, 176, 88, 51, 168, 188, 156, 175,
])

export function getLiquidateFullPosition4DiscriminatorBytes() {
  return fixEncoderSize(getBytesEncoder(), 8).encode(
    LIQUIDATE_FULL_POSITION4_DISCRIMINATOR
  )
}

export type LiquidateFullPosition4Instruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountSigner extends string | AccountMeta<string> = string,
  TAccountPerpetuals extends string | AccountMeta<string> = string,
  TAccountPool extends string | AccountMeta<string> = string,
  TAccountPosition extends string | AccountMeta<string> = string,
  TAccountCustody extends string | AccountMeta<string> = string,
  TAccountCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustody extends string | AccountMeta<string> = string,
  TAccountCollateralCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyTokenAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountEventAuthority extends string | AccountMeta<string> = string,
  TAccountProgram extends string | AccountMeta<string> = string,
  TRemainingAccounts extends readonly AccountMeta<string>[] = [],
> = Instruction<TProgram> &
  InstructionWithData<ReadonlyUint8Array> &
  InstructionWithAccounts<
    [
      TAccountSigner extends string
        ? ReadonlySignerAccount<TAccountSigner> &
            AccountSignerMeta<TAccountSigner>
        : TAccountSigner,
      TAccountPerpetuals extends string
        ? ReadonlyAccount<TAccountPerpetuals>
        : TAccountPerpetuals,
      TAccountPool extends string
        ? WritableAccount<TAccountPool>
        : TAccountPool,
      TAccountPosition extends string
        ? WritableAccount<TAccountPosition>
        : TAccountPosition,
      TAccountCustody extends string
        ? WritableAccount<TAccountCustody>
        : TAccountCustody,
      TAccountCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyDovesPriceAccount>
        : TAccountCustodyDovesPriceAccount,
      TAccountCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyPythnetPriceAccount>
        : TAccountCustodyPythnetPriceAccount,
      TAccountCollateralCustody extends string
        ? WritableAccount<TAccountCollateralCustody>
        : TAccountCollateralCustody,
      TAccountCollateralCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyDovesPriceAccount>
        : TAccountCollateralCustodyDovesPriceAccount,
      TAccountCollateralCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyPythnetPriceAccount>
        : TAccountCollateralCustodyPythnetPriceAccount,
      TAccountCollateralCustodyTokenAccount extends string
        ? WritableAccount<TAccountCollateralCustodyTokenAccount>
        : TAccountCollateralCustodyTokenAccount,
      TAccountEventAuthority extends string
        ? ReadonlyAccount<TAccountEventAuthority>
        : TAccountEventAuthority,
      TAccountProgram extends string
        ? ReadonlyAccount<TAccountProgram>
        : TAccountProgram,
      ...TRemainingAccounts,
    ]
  >

export type LiquidateFullPosition4InstructionData = {
  discriminator: ReadonlyUint8Array
}

export type LiquidateFullPosition4InstructionDataArgs = {}

export function getLiquidateFullPosition4InstructionDataEncoder(): FixedSizeEncoder<LiquidateFullPosition4InstructionDataArgs> {
  return transformEncoder(
    getStructEncoder([['discriminator', fixEncoderSize(getBytesEncoder(), 8)]]),
    (value) => ({
      ...value,
      discriminator: LIQUIDATE_FULL_POSITION4_DISCRIMINATOR,
    })
  )
}

export function getLiquidateFullPosition4InstructionDataDecoder(): FixedSizeDecoder<LiquidateFullPosition4InstructionData> {
  return getStructDecoder([
    ['discriminator', fixDecoderSize(getBytesDecoder(), 8)],
  ])
}

export function getLiquidateFullPosition4InstructionDataCodec(): FixedSizeCodec<
  LiquidateFullPosition4InstructionDataArgs,
  LiquidateFullPosition4InstructionData
> {
  return combineCodec(
    getLiquidateFullPosition4InstructionDataEncoder(),
    getLiquidateFullPosition4InstructionDataDecoder()
  )
}

export type LiquidateFullPosition4Input<
  TAccountSigner extends string = string,
  TAccountPerpetuals extends string = string,
  TAccountPool extends string = string,
  TAccountPosition extends string = string,
  TAccountCustody extends string = string,
  TAccountCustodyDovesPriceAccount extends string = string,
  TAccountCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustody extends string = string,
  TAccountCollateralCustodyDovesPriceAccount extends string = string,
  TAccountCollateralCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustodyTokenAccount extends string = string,
  TAccountEventAuthority extends string = string,
  TAccountProgram extends string = string,
> = {
  signer: TransactionSigner<TAccountSigner>
  perpetuals: Address<TAccountPerpetuals>
  pool: Address<TAccountPool>
  position: Address<TAccountPosition>
  custody: Address<TAccountCustody>
  custodyDovesPriceAccount: Address<TAccountCustodyDovesPriceAccount>
  custodyPythnetPriceAccount: Address<TAccountCustodyPythnetPriceAccount>
  collateralCustody: Address<TAccountCollateralCustody>
  collateralCustodyDovesPriceAccount: Address<TAccountCollateralCustodyDovesPriceAccount>
  collateralCustodyPythnetPriceAccount: Address<TAccountCollateralCustodyPythnetPriceAccount>
  collateralCustodyTokenAccount: Address<TAccountCollateralCustodyTokenAccount>
  eventAuthority: Address<TAccountEventAuthority>
  program: Address<TAccountProgram>
}

export function getLiquidateFullPosition4Instruction<
  TAccountSigner extends string,
  TAccountPerpetuals extends string,
  TAccountPool extends string,
  TAccountPosition extends string,
  TAccountCustody extends string,
  TAccountCustodyDovesPriceAccount extends string,
  TAccountCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustody extends string,
  TAccountCollateralCustodyDovesPriceAccount extends string,
  TAccountCollateralCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustodyTokenAccount extends string,
  TAccountEventAuthority extends string,
  TAccountProgram extends string,
  TProgramAddress extends Address = typeof PERPETUALS_PROGRAM_ADDRESS,
>(
  input: LiquidateFullPosition4Input<
    TAccountSigner,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountEventAuthority,
    TAccountProgram
  >,
  config?: { programAddress?: TProgramAddress }
): LiquidateFullPosition4Instruction<
  TProgramAddress,
  TAccountSigner,
  TAccountPerpetuals,
  TAccountPool,
  TAccountPosition,
  TAccountCustody,
  TAccountCustodyDovesPriceAccount,
  TAccountCustodyPythnetPriceAccount,
  TAccountCollateralCustody,
  TAccountCollateralCustodyDovesPriceAccount,
  TAccountCollateralCustodyPythnetPriceAccount,
  TAccountCollateralCustodyTokenAccount,
  TAccountEventAuthority,
  TAccountProgram
> {
  // Program address.
  const programAddress = config?.programAddress ?? PERPETUALS_PROGRAM_ADDRESS

  // Original accounts.
  const originalAccounts = {
    signer: { value: input.signer ?? null, isWritable: false },
    perpetuals: { value: input.perpetuals ?? null, isWritable: false },
    pool: { value: input.pool ?? null, isWritable: true },
    position: { value: input.position ?? null, isWritable: true },
    custody: { value: input.custody ?? null, isWritable: true },
    custodyDovesPriceAccount: {
      value: input.custodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    custodyPythnetPriceAccount: {
      value: input.custodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustody: {
      value: input.collateralCustody ?? null,
      isWritable: true,
    },
    collateralCustodyDovesPriceAccount: {
      value: input.collateralCustodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyPythnetPriceAccount: {
      value: input.collateralCustodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyTokenAccount: {
      value: input.collateralCustodyTokenAccount ?? null,
      isWritable: true,
    },
    eventAuthority: { value: input.eventAuthority ?? null, isWritable: false },
    program: { value: input.program ?? null, isWritable: false },
  }
  const accounts = originalAccounts as Record<
    keyof typeof originalAccounts,
    ResolvedAccount
  >

  const getAccountMeta = getAccountMetaFactory(programAddress, 'programId')
  const instruction = {
    accounts: [
      getAccountMeta(accounts.signer),
      getAccountMeta(accounts.perpetuals),
      getAccountMeta(accounts.pool),
      getAccountMeta(accounts.position),
      getAccountMeta(accounts.custody),
      getAccountMeta(accounts.custodyDovesPriceAccount),
      getAccountMeta(accounts.custodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustody),
      getAccountMeta(accounts.collateralCustodyDovesPriceAccount),
      getAccountMeta(accounts.collateralCustodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustodyTokenAccount),
      getAccountMeta(accounts.eventAuthority),
      getAccountMeta(accounts.program),
    ],
    programAddress,
    data: getLiquidateFullPosition4InstructionDataEncoder().encode({}),
  } as LiquidateFullPosition4Instruction<
    TProgramAddress,
    TAccountSigner,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountEventAuthority,
    TAccountProgram
  >

  return instruction
}

export type ParsedLiquidateFullPosition4Instruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[],
> = {
  programAddress: Address<TProgram>
  accounts: {
    signer: TAccountMetas[0]
    perpetuals: TAccountMetas[1]
    pool: TAccountMetas[2]
    position: TAccountMetas[3]
    custody: TAccountMetas[4]
    custodyDovesPriceAccount: TAccountMetas[5]
    custodyPythnetPriceAccount: TAccountMetas[6]
    collateralCustody: TAccountMetas[7]
    collateralCustodyDovesPriceAccount: TAccountMetas[8]
    collateralCustodyPythnetPriceAccount: TAccountMetas[9]
    collateralCustodyTokenAccount: TAccountMetas[10]
    eventAuthority: TAccountMetas[11]
    program: TAccountMetas[12]
  }
  data: LiquidateFullPosition4InstructionData
}

export function parseLiquidateFullPosition4Instruction<
  TProgram extends string,
  TAccountMetas extends readonly AccountMeta[],
>(
  instruction: Instruction<TProgram> &
    InstructionWithAccounts<TAccountMetas> &
    InstructionWithData<ReadonlyUint8Array>
): ParsedLiquidateFullPosition4Instruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 13) {
    // TODO: Coded error.
    throw new Error('Not enough accounts')
  }
  let accountIndex = 0
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!
    accountIndex += 1
    return accountMeta
  }
  return {
    programAddress: instruction.programAddress,
    accounts: {
      signer: getNextAccount(),
      perpetuals: getNextAccount(),
      pool: getNextAccount(),
      position: getNextAccount(),
      custody: getNextAccount(),
      custodyDovesPriceAccount: getNextAccount(),
      custodyPythnetPriceAccount: getNextAccount(),
      collateralCustody: getNextAccount(),
      collateralCustodyDovesPriceAccount: getNextAccount(),
      collateralCustodyPythnetPriceAccount: getNextAccount(),
      collateralCustodyTokenAccount: getNextAccount(),
      eventAuthority: getNextAccount(),
      program: getNextAccount(),
    },
    data: getLiquidateFullPosition4InstructionDataDecoder().decode(
      instruction.data
    ),
  }
}
