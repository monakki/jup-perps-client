/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  transformEncoder,
  type AccountMeta,
  type AccountSignerMeta,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Instruction,
  type InstructionWithAccounts,
  type InstructionWithData,
  type Option,
  type OptionOrNullable,
  type ReadonlyAccount,
  type ReadonlySignerAccount,
  type ReadonlyUint8Array,
  type TransactionSigner,
  type WritableAccount,
  type WritableSignerAccount,
} from '@solana/kit'
import { PERPETUALS_PROGRAM_ADDRESS } from '../programs'
import { getAccountMetaFactory, type ResolvedAccount } from '../shared'
import {
  getSideDecoder,
  getSideEncoder,
  type Side,
  type SideArgs,
} from '../types'

export const INSTANT_INCREASE_POSITION_DISCRIMINATOR = new Uint8Array([
  164, 126, 68, 182, 223, 166, 64, 183,
])

export function getInstantIncreasePositionDiscriminatorBytes() {
  return fixEncoderSize(getBytesEncoder(), 8).encode(
    INSTANT_INCREASE_POSITION_DISCRIMINATOR
  )
}

export type InstantIncreasePositionInstruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountKeeper extends string | AccountMeta<string> = string,
  TAccountApiKeeper extends string | AccountMeta<string> = string,
  TAccountOwner extends string | AccountMeta<string> = string,
  TAccountFundingAccount extends string | AccountMeta<string> = string,
  TAccountPerpetuals extends string | AccountMeta<string> = string,
  TAccountPool extends string | AccountMeta<string> = string,
  TAccountPosition extends string | AccountMeta<string> = string,
  TAccountCustody extends string | AccountMeta<string> = string,
  TAccountCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustody extends string | AccountMeta<string> = string,
  TAccountCollateralCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyTokenAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountTokenLedger extends string | AccountMeta<string> = string,
  TAccountReferral extends string | AccountMeta<string> = string,
  TAccountTokenProgram extends
    | string
    | AccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSystemProgram extends
    | string
    | AccountMeta<string> = '11111111111111111111111111111111',
  TAccountEventAuthority extends string | AccountMeta<string> = string,
  TAccountProgram extends string | AccountMeta<string> = string,
  TRemainingAccounts extends readonly AccountMeta<string>[] = [],
> = Instruction<TProgram> &
  InstructionWithData<ReadonlyUint8Array> &
  InstructionWithAccounts<
    [
      TAccountKeeper extends string
        ? ReadonlySignerAccount<TAccountKeeper> &
            AccountSignerMeta<TAccountKeeper>
        : TAccountKeeper,
      TAccountApiKeeper extends string
        ? ReadonlySignerAccount<TAccountApiKeeper> &
            AccountSignerMeta<TAccountApiKeeper>
        : TAccountApiKeeper,
      TAccountOwner extends string
        ? WritableSignerAccount<TAccountOwner> &
            AccountSignerMeta<TAccountOwner>
        : TAccountOwner,
      TAccountFundingAccount extends string
        ? WritableAccount<TAccountFundingAccount>
        : TAccountFundingAccount,
      TAccountPerpetuals extends string
        ? ReadonlyAccount<TAccountPerpetuals>
        : TAccountPerpetuals,
      TAccountPool extends string
        ? WritableAccount<TAccountPool>
        : TAccountPool,
      TAccountPosition extends string
        ? WritableAccount<TAccountPosition>
        : TAccountPosition,
      TAccountCustody extends string
        ? WritableAccount<TAccountCustody>
        : TAccountCustody,
      TAccountCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyDovesPriceAccount>
        : TAccountCustodyDovesPriceAccount,
      TAccountCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyPythnetPriceAccount>
        : TAccountCustodyPythnetPriceAccount,
      TAccountCollateralCustody extends string
        ? WritableAccount<TAccountCollateralCustody>
        : TAccountCollateralCustody,
      TAccountCollateralCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyDovesPriceAccount>
        : TAccountCollateralCustodyDovesPriceAccount,
      TAccountCollateralCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyPythnetPriceAccount>
        : TAccountCollateralCustodyPythnetPriceAccount,
      TAccountCollateralCustodyTokenAccount extends string
        ? WritableAccount<TAccountCollateralCustodyTokenAccount>
        : TAccountCollateralCustodyTokenAccount,
      TAccountTokenLedger extends string
        ? ReadonlyAccount<TAccountTokenLedger>
        : TAccountTokenLedger,
      TAccountReferral extends string
        ? ReadonlyAccount<TAccountReferral>
        : TAccountReferral,
      TAccountTokenProgram extends string
        ? ReadonlyAccount<TAccountTokenProgram>
        : TAccountTokenProgram,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      TAccountEventAuthority extends string
        ? ReadonlyAccount<TAccountEventAuthority>
        : TAccountEventAuthority,
      TAccountProgram extends string
        ? ReadonlyAccount<TAccountProgram>
        : TAccountProgram,
      ...TRemainingAccounts,
    ]
  >

export type InstantIncreasePositionInstructionData = {
  discriminator: ReadonlyUint8Array
  sizeUsdDelta: bigint
  collateralTokenDelta: Option<bigint>
  side: Side
  priceSlippage: bigint
  requestTime: bigint
}

export type InstantIncreasePositionInstructionDataArgs = {
  sizeUsdDelta: number | bigint
  collateralTokenDelta: OptionOrNullable<number | bigint>
  side: SideArgs
  priceSlippage: number | bigint
  requestTime: number | bigint
}

export function getInstantIncreasePositionInstructionDataEncoder(): Encoder<InstantIncreasePositionInstructionDataArgs> {
  return transformEncoder(
    getStructEncoder([
      ['discriminator', fixEncoderSize(getBytesEncoder(), 8)],
      ['sizeUsdDelta', getU64Encoder()],
      ['collateralTokenDelta', getOptionEncoder(getU64Encoder())],
      ['side', getSideEncoder()],
      ['priceSlippage', getU64Encoder()],
      ['requestTime', getI64Encoder()],
    ]),
    (value) => ({
      ...value,
      discriminator: INSTANT_INCREASE_POSITION_DISCRIMINATOR,
    })
  )
}

export function getInstantIncreasePositionInstructionDataDecoder(): Decoder<InstantIncreasePositionInstructionData> {
  return getStructDecoder([
    ['discriminator', fixDecoderSize(getBytesDecoder(), 8)],
    ['sizeUsdDelta', getU64Decoder()],
    ['collateralTokenDelta', getOptionDecoder(getU64Decoder())],
    ['side', getSideDecoder()],
    ['priceSlippage', getU64Decoder()],
    ['requestTime', getI64Decoder()],
  ])
}

export function getInstantIncreasePositionInstructionDataCodec(): Codec<
  InstantIncreasePositionInstructionDataArgs,
  InstantIncreasePositionInstructionData
> {
  return combineCodec(
    getInstantIncreasePositionInstructionDataEncoder(),
    getInstantIncreasePositionInstructionDataDecoder()
  )
}

export type InstantIncreasePositionInput<
  TAccountKeeper extends string = string,
  TAccountApiKeeper extends string = string,
  TAccountOwner extends string = string,
  TAccountFundingAccount extends string = string,
  TAccountPerpetuals extends string = string,
  TAccountPool extends string = string,
  TAccountPosition extends string = string,
  TAccountCustody extends string = string,
  TAccountCustodyDovesPriceAccount extends string = string,
  TAccountCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustody extends string = string,
  TAccountCollateralCustodyDovesPriceAccount extends string = string,
  TAccountCollateralCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustodyTokenAccount extends string = string,
  TAccountTokenLedger extends string = string,
  TAccountReferral extends string = string,
  TAccountTokenProgram extends string = string,
  TAccountSystemProgram extends string = string,
  TAccountEventAuthority extends string = string,
  TAccountProgram extends string = string,
> = {
  keeper: TransactionSigner<TAccountKeeper>
  apiKeeper: TransactionSigner<TAccountApiKeeper>
  owner: TransactionSigner<TAccountOwner>
  fundingAccount: Address<TAccountFundingAccount>
  perpetuals: Address<TAccountPerpetuals>
  pool: Address<TAccountPool>
  position: Address<TAccountPosition>
  custody: Address<TAccountCustody>
  custodyDovesPriceAccount: Address<TAccountCustodyDovesPriceAccount>
  custodyPythnetPriceAccount: Address<TAccountCustodyPythnetPriceAccount>
  collateralCustody: Address<TAccountCollateralCustody>
  collateralCustodyDovesPriceAccount: Address<TAccountCollateralCustodyDovesPriceAccount>
  collateralCustodyPythnetPriceAccount: Address<TAccountCollateralCustodyPythnetPriceAccount>
  collateralCustodyTokenAccount: Address<TAccountCollateralCustodyTokenAccount>
  tokenLedger?: Address<TAccountTokenLedger>
  referral?: Address<TAccountReferral>
  tokenProgram?: Address<TAccountTokenProgram>
  systemProgram?: Address<TAccountSystemProgram>
  eventAuthority: Address<TAccountEventAuthority>
  program: Address<TAccountProgram>
  sizeUsdDelta: InstantIncreasePositionInstructionDataArgs['sizeUsdDelta']
  collateralTokenDelta: InstantIncreasePositionInstructionDataArgs['collateralTokenDelta']
  side: InstantIncreasePositionInstructionDataArgs['side']
  priceSlippage: InstantIncreasePositionInstructionDataArgs['priceSlippage']
  requestTime: InstantIncreasePositionInstructionDataArgs['requestTime']
}

export function getInstantIncreasePositionInstruction<
  TAccountKeeper extends string,
  TAccountApiKeeper extends string,
  TAccountOwner extends string,
  TAccountFundingAccount extends string,
  TAccountPerpetuals extends string,
  TAccountPool extends string,
  TAccountPosition extends string,
  TAccountCustody extends string,
  TAccountCustodyDovesPriceAccount extends string,
  TAccountCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustody extends string,
  TAccountCollateralCustodyDovesPriceAccount extends string,
  TAccountCollateralCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustodyTokenAccount extends string,
  TAccountTokenLedger extends string,
  TAccountReferral extends string,
  TAccountTokenProgram extends string,
  TAccountSystemProgram extends string,
  TAccountEventAuthority extends string,
  TAccountProgram extends string,
  TProgramAddress extends Address = typeof PERPETUALS_PROGRAM_ADDRESS,
>(
  input: InstantIncreasePositionInput<
    TAccountKeeper,
    TAccountApiKeeper,
    TAccountOwner,
    TAccountFundingAccount,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountTokenLedger,
    TAccountReferral,
    TAccountTokenProgram,
    TAccountSystemProgram,
    TAccountEventAuthority,
    TAccountProgram
  >,
  config?: { programAddress?: TProgramAddress }
): InstantIncreasePositionInstruction<
  TProgramAddress,
  TAccountKeeper,
  TAccountApiKeeper,
  TAccountOwner,
  TAccountFundingAccount,
  TAccountPerpetuals,
  TAccountPool,
  TAccountPosition,
  TAccountCustody,
  TAccountCustodyDovesPriceAccount,
  TAccountCustodyPythnetPriceAccount,
  TAccountCollateralCustody,
  TAccountCollateralCustodyDovesPriceAccount,
  TAccountCollateralCustodyPythnetPriceAccount,
  TAccountCollateralCustodyTokenAccount,
  TAccountTokenLedger,
  TAccountReferral,
  TAccountTokenProgram,
  TAccountSystemProgram,
  TAccountEventAuthority,
  TAccountProgram
> {
  // Program address.
  const programAddress = config?.programAddress ?? PERPETUALS_PROGRAM_ADDRESS

  // Original accounts.
  const originalAccounts = {
    keeper: { value: input.keeper ?? null, isWritable: false },
    apiKeeper: { value: input.apiKeeper ?? null, isWritable: false },
    owner: { value: input.owner ?? null, isWritable: true },
    fundingAccount: { value: input.fundingAccount ?? null, isWritable: true },
    perpetuals: { value: input.perpetuals ?? null, isWritable: false },
    pool: { value: input.pool ?? null, isWritable: true },
    position: { value: input.position ?? null, isWritable: true },
    custody: { value: input.custody ?? null, isWritable: true },
    custodyDovesPriceAccount: {
      value: input.custodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    custodyPythnetPriceAccount: {
      value: input.custodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustody: {
      value: input.collateralCustody ?? null,
      isWritable: true,
    },
    collateralCustodyDovesPriceAccount: {
      value: input.collateralCustodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyPythnetPriceAccount: {
      value: input.collateralCustodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyTokenAccount: {
      value: input.collateralCustodyTokenAccount ?? null,
      isWritable: true,
    },
    tokenLedger: { value: input.tokenLedger ?? null, isWritable: false },
    referral: { value: input.referral ?? null, isWritable: false },
    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false },
    systemProgram: { value: input.systemProgram ?? null, isWritable: false },
    eventAuthority: { value: input.eventAuthority ?? null, isWritable: false },
    program: { value: input.program ?? null, isWritable: false },
  }
  const accounts = originalAccounts as Record<
    keyof typeof originalAccounts,
    ResolvedAccount
  >

  // Original args.
  const args = { ...input }

  // Resolve default values.
  if (!accounts.tokenProgram.value) {
    accounts.tokenProgram.value =
      'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>
  }
  if (!accounts.systemProgram.value) {
    accounts.systemProgram.value =
      '11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>
  }

  const getAccountMeta = getAccountMetaFactory(programAddress, 'programId')
  const instruction = {
    accounts: [
      getAccountMeta(accounts.keeper),
      getAccountMeta(accounts.apiKeeper),
      getAccountMeta(accounts.owner),
      getAccountMeta(accounts.fundingAccount),
      getAccountMeta(accounts.perpetuals),
      getAccountMeta(accounts.pool),
      getAccountMeta(accounts.position),
      getAccountMeta(accounts.custody),
      getAccountMeta(accounts.custodyDovesPriceAccount),
      getAccountMeta(accounts.custodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustody),
      getAccountMeta(accounts.collateralCustodyDovesPriceAccount),
      getAccountMeta(accounts.collateralCustodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustodyTokenAccount),
      getAccountMeta(accounts.tokenLedger),
      getAccountMeta(accounts.referral),
      getAccountMeta(accounts.tokenProgram),
      getAccountMeta(accounts.systemProgram),
      getAccountMeta(accounts.eventAuthority),
      getAccountMeta(accounts.program),
    ],
    programAddress,
    data: getInstantIncreasePositionInstructionDataEncoder().encode(
      args as InstantIncreasePositionInstructionDataArgs
    ),
  } as InstantIncreasePositionInstruction<
    TProgramAddress,
    TAccountKeeper,
    TAccountApiKeeper,
    TAccountOwner,
    TAccountFundingAccount,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountTokenLedger,
    TAccountReferral,
    TAccountTokenProgram,
    TAccountSystemProgram,
    TAccountEventAuthority,
    TAccountProgram
  >

  return instruction
}

export type ParsedInstantIncreasePositionInstruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[],
> = {
  programAddress: Address<TProgram>
  accounts: {
    keeper: TAccountMetas[0]
    apiKeeper: TAccountMetas[1]
    owner: TAccountMetas[2]
    fundingAccount: TAccountMetas[3]
    perpetuals: TAccountMetas[4]
    pool: TAccountMetas[5]
    position: TAccountMetas[6]
    custody: TAccountMetas[7]
    custodyDovesPriceAccount: TAccountMetas[8]
    custodyPythnetPriceAccount: TAccountMetas[9]
    collateralCustody: TAccountMetas[10]
    collateralCustodyDovesPriceAccount: TAccountMetas[11]
    collateralCustodyPythnetPriceAccount: TAccountMetas[12]
    collateralCustodyTokenAccount: TAccountMetas[13]
    tokenLedger?: TAccountMetas[14] | undefined
    referral?: TAccountMetas[15] | undefined
    tokenProgram: TAccountMetas[16]
    systemProgram: TAccountMetas[17]
    eventAuthority: TAccountMetas[18]
    program: TAccountMetas[19]
  }
  data: InstantIncreasePositionInstructionData
}

export function parseInstantIncreasePositionInstruction<
  TProgram extends string,
  TAccountMetas extends readonly AccountMeta[],
>(
  instruction: Instruction<TProgram> &
    InstructionWithAccounts<TAccountMetas> &
    InstructionWithData<ReadonlyUint8Array>
): ParsedInstantIncreasePositionInstruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 20) {
    // TODO: Coded error.
    throw new Error('Not enough accounts')
  }
  let accountIndex = 0
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!
    accountIndex += 1
    return accountMeta
  }
  const getNextOptionalAccount = () => {
    const accountMeta = getNextAccount()
    return accountMeta.address === PERPETUALS_PROGRAM_ADDRESS
      ? undefined
      : accountMeta
  }
  return {
    programAddress: instruction.programAddress,
    accounts: {
      keeper: getNextAccount(),
      apiKeeper: getNextAccount(),
      owner: getNextAccount(),
      fundingAccount: getNextAccount(),
      perpetuals: getNextAccount(),
      pool: getNextAccount(),
      position: getNextAccount(),
      custody: getNextAccount(),
      custodyDovesPriceAccount: getNextAccount(),
      custodyPythnetPriceAccount: getNextAccount(),
      collateralCustody: getNextAccount(),
      collateralCustodyDovesPriceAccount: getNextAccount(),
      collateralCustodyPythnetPriceAccount: getNextAccount(),
      collateralCustodyTokenAccount: getNextAccount(),
      tokenLedger: getNextOptionalAccount(),
      referral: getNextOptionalAccount(),
      tokenProgram: getNextAccount(),
      systemProgram: getNextAccount(),
      eventAuthority: getNextAccount(),
      program: getNextAccount(),
    },
    data: getInstantIncreasePositionInstructionDataDecoder().decode(
      instruction.data
    ),
  }
}
