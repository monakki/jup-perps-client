/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU128Decoder,
  getU128Encoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type Limit = {
  maxAumUsd: bigint
  tokenWeightageBufferBps: bigint
  buffer: bigint
}

export type LimitArgs = {
  maxAumUsd: number | bigint
  tokenWeightageBufferBps: number | bigint
  buffer: number | bigint
}

export function getLimitEncoder(): FixedSizeEncoder<LimitArgs> {
  return getStructEncoder([
    ['maxAumUsd', getU128Encoder()],
    ['tokenWeightageBufferBps', getU128Encoder()],
    ['buffer', getU64Encoder()],
  ])
}

export function getLimitDecoder(): FixedSizeDecoder<Limit> {
  return getStructDecoder([
    ['maxAumUsd', getU128Decoder()],
    ['tokenWeightageBufferBps', getU128Decoder()],
    ['buffer', getU64Decoder()],
  ])
}

export function getLimitCodec(): FixedSizeCodec<LimitArgs, Limit> {
  return combineCodec(getLimitEncoder(), getLimitDecoder())
}
