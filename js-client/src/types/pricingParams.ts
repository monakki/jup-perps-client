/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit'

export type PricingParams = {
  tradeImpactFeeScalar: bigint
  buffer: bigint
  swapSpread: bigint
  maxLeverage: bigint
  maxGlobalLongSizes: bigint
  maxGlobalShortSizes: bigint
}

export type PricingParamsArgs = {
  tradeImpactFeeScalar: number | bigint
  buffer: number | bigint
  swapSpread: number | bigint
  maxLeverage: number | bigint
  maxGlobalLongSizes: number | bigint
  maxGlobalShortSizes: number | bigint
}

export function getPricingParamsEncoder(): FixedSizeEncoder<PricingParamsArgs> {
  return getStructEncoder([
    ['tradeImpactFeeScalar', getU64Encoder()],
    ['buffer', getU64Encoder()],
    ['swapSpread', getU64Encoder()],
    ['maxLeverage', getU64Encoder()],
    ['maxGlobalLongSizes', getU64Encoder()],
    ['maxGlobalShortSizes', getU64Encoder()],
  ])
}

export function getPricingParamsDecoder(): FixedSizeDecoder<PricingParams> {
  return getStructDecoder([
    ['tradeImpactFeeScalar', getU64Decoder()],
    ['buffer', getU64Decoder()],
    ['swapSpread', getU64Decoder()],
    ['maxLeverage', getU64Decoder()],
    ['maxGlobalLongSizes', getU64Decoder()],
    ['maxGlobalShortSizes', getU64Decoder()],
  ])
}

export function getPricingParamsCodec(): FixedSizeCodec<
  PricingParamsArgs,
  PricingParams
> {
  return combineCodec(getPricingParamsEncoder(), getPricingParamsDecoder())
}
