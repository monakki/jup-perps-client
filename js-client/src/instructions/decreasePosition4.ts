/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  transformEncoder,
  type AccountMeta,
  type AccountSignerMeta,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type Instruction,
  type InstructionWithAccounts,
  type InstructionWithData,
  type ReadonlyAccount,
  type ReadonlySignerAccount,
  type ReadonlyUint8Array,
  type TransactionSigner,
  type WritableAccount,
} from '@solana/kit'
import { PERPETUALS_PROGRAM_ADDRESS } from '../programs'
import { getAccountMetaFactory, type ResolvedAccount } from '../shared'

export const DECREASE_POSITION4_DISCRIMINATOR = new Uint8Array([
  185, 161, 114, 175, 96, 148, 3, 170,
])

export function getDecreasePosition4DiscriminatorBytes() {
  return fixEncoderSize(getBytesEncoder(), 8).encode(
    DECREASE_POSITION4_DISCRIMINATOR
  )
}

export type DecreasePosition4Instruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountKeeper extends string | AccountMeta<string> = string,
  TAccountOwner extends string | AccountMeta<string> = string,
  TAccountTransferAuthority extends string | AccountMeta<string> = string,
  TAccountPerpetuals extends string | AccountMeta<string> = string,
  TAccountPool extends string | AccountMeta<string> = string,
  TAccountPositionRequest extends string | AccountMeta<string> = string,
  TAccountPositionRequestAta extends string | AccountMeta<string> = string,
  TAccountPosition extends string | AccountMeta<string> = string,
  TAccountCustody extends string | AccountMeta<string> = string,
  TAccountCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustody extends string | AccountMeta<string> = string,
  TAccountCollateralCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustodyTokenAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountTokenProgram extends
    | string
    | AccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountEventAuthority extends string | AccountMeta<string> = string,
  TAccountProgram extends string | AccountMeta<string> = string,
  TRemainingAccounts extends readonly AccountMeta<string>[] = [],
> = Instruction<TProgram> &
  InstructionWithData<ReadonlyUint8Array> &
  InstructionWithAccounts<
    [
      TAccountKeeper extends string
        ? ReadonlySignerAccount<TAccountKeeper> &
            AccountSignerMeta<TAccountKeeper>
        : TAccountKeeper,
      TAccountOwner extends string
        ? WritableAccount<TAccountOwner>
        : TAccountOwner,
      TAccountTransferAuthority extends string
        ? ReadonlyAccount<TAccountTransferAuthority>
        : TAccountTransferAuthority,
      TAccountPerpetuals extends string
        ? ReadonlyAccount<TAccountPerpetuals>
        : TAccountPerpetuals,
      TAccountPool extends string
        ? WritableAccount<TAccountPool>
        : TAccountPool,
      TAccountPositionRequest extends string
        ? WritableAccount<TAccountPositionRequest>
        : TAccountPositionRequest,
      TAccountPositionRequestAta extends string
        ? WritableAccount<TAccountPositionRequestAta>
        : TAccountPositionRequestAta,
      TAccountPosition extends string
        ? WritableAccount<TAccountPosition>
        : TAccountPosition,
      TAccountCustody extends string
        ? WritableAccount<TAccountCustody>
        : TAccountCustody,
      TAccountCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyDovesPriceAccount>
        : TAccountCustodyDovesPriceAccount,
      TAccountCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyPythnetPriceAccount>
        : TAccountCustodyPythnetPriceAccount,
      TAccountCollateralCustody extends string
        ? WritableAccount<TAccountCollateralCustody>
        : TAccountCollateralCustody,
      TAccountCollateralCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyDovesPriceAccount>
        : TAccountCollateralCustodyDovesPriceAccount,
      TAccountCollateralCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCollateralCustodyPythnetPriceAccount>
        : TAccountCollateralCustodyPythnetPriceAccount,
      TAccountCollateralCustodyTokenAccount extends string
        ? WritableAccount<TAccountCollateralCustodyTokenAccount>
        : TAccountCollateralCustodyTokenAccount,
      TAccountTokenProgram extends string
        ? ReadonlyAccount<TAccountTokenProgram>
        : TAccountTokenProgram,
      TAccountEventAuthority extends string
        ? ReadonlyAccount<TAccountEventAuthority>
        : TAccountEventAuthority,
      TAccountProgram extends string
        ? ReadonlyAccount<TAccountProgram>
        : TAccountProgram,
      ...TRemainingAccounts,
    ]
  >

export type DecreasePosition4InstructionData = {
  discriminator: ReadonlyUint8Array
}

export type DecreasePosition4InstructionDataArgs = {}

export function getDecreasePosition4InstructionDataEncoder(): FixedSizeEncoder<DecreasePosition4InstructionDataArgs> {
  return transformEncoder(
    getStructEncoder([['discriminator', fixEncoderSize(getBytesEncoder(), 8)]]),
    (value) => ({ ...value, discriminator: DECREASE_POSITION4_DISCRIMINATOR })
  )
}

export function getDecreasePosition4InstructionDataDecoder(): FixedSizeDecoder<DecreasePosition4InstructionData> {
  return getStructDecoder([
    ['discriminator', fixDecoderSize(getBytesDecoder(), 8)],
  ])
}

export function getDecreasePosition4InstructionDataCodec(): FixedSizeCodec<
  DecreasePosition4InstructionDataArgs,
  DecreasePosition4InstructionData
> {
  return combineCodec(
    getDecreasePosition4InstructionDataEncoder(),
    getDecreasePosition4InstructionDataDecoder()
  )
}

export type DecreasePosition4Input<
  TAccountKeeper extends string = string,
  TAccountOwner extends string = string,
  TAccountTransferAuthority extends string = string,
  TAccountPerpetuals extends string = string,
  TAccountPool extends string = string,
  TAccountPositionRequest extends string = string,
  TAccountPositionRequestAta extends string = string,
  TAccountPosition extends string = string,
  TAccountCustody extends string = string,
  TAccountCustodyDovesPriceAccount extends string = string,
  TAccountCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustody extends string = string,
  TAccountCollateralCustodyDovesPriceAccount extends string = string,
  TAccountCollateralCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustodyTokenAccount extends string = string,
  TAccountTokenProgram extends string = string,
  TAccountEventAuthority extends string = string,
  TAccountProgram extends string = string,
> = {
  keeper: TransactionSigner<TAccountKeeper>
  owner: Address<TAccountOwner>
  transferAuthority: Address<TAccountTransferAuthority>
  perpetuals: Address<TAccountPerpetuals>
  pool: Address<TAccountPool>
  positionRequest: Address<TAccountPositionRequest>
  positionRequestAta: Address<TAccountPositionRequestAta>
  position: Address<TAccountPosition>
  custody: Address<TAccountCustody>
  custodyDovesPriceAccount: Address<TAccountCustodyDovesPriceAccount>
  custodyPythnetPriceAccount: Address<TAccountCustodyPythnetPriceAccount>
  collateralCustody: Address<TAccountCollateralCustody>
  collateralCustodyDovesPriceAccount: Address<TAccountCollateralCustodyDovesPriceAccount>
  collateralCustodyPythnetPriceAccount: Address<TAccountCollateralCustodyPythnetPriceAccount>
  collateralCustodyTokenAccount: Address<TAccountCollateralCustodyTokenAccount>
  tokenProgram?: Address<TAccountTokenProgram>
  eventAuthority: Address<TAccountEventAuthority>
  program: Address<TAccountProgram>
}

export function getDecreasePosition4Instruction<
  TAccountKeeper extends string,
  TAccountOwner extends string,
  TAccountTransferAuthority extends string,
  TAccountPerpetuals extends string,
  TAccountPool extends string,
  TAccountPositionRequest extends string,
  TAccountPositionRequestAta extends string,
  TAccountPosition extends string,
  TAccountCustody extends string,
  TAccountCustodyDovesPriceAccount extends string,
  TAccountCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustody extends string,
  TAccountCollateralCustodyDovesPriceAccount extends string,
  TAccountCollateralCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustodyTokenAccount extends string,
  TAccountTokenProgram extends string,
  TAccountEventAuthority extends string,
  TAccountProgram extends string,
  TProgramAddress extends Address = typeof PERPETUALS_PROGRAM_ADDRESS,
>(
  input: DecreasePosition4Input<
    TAccountKeeper,
    TAccountOwner,
    TAccountTransferAuthority,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPositionRequest,
    TAccountPositionRequestAta,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountTokenProgram,
    TAccountEventAuthority,
    TAccountProgram
  >,
  config?: { programAddress?: TProgramAddress }
): DecreasePosition4Instruction<
  TProgramAddress,
  TAccountKeeper,
  TAccountOwner,
  TAccountTransferAuthority,
  TAccountPerpetuals,
  TAccountPool,
  TAccountPositionRequest,
  TAccountPositionRequestAta,
  TAccountPosition,
  TAccountCustody,
  TAccountCustodyDovesPriceAccount,
  TAccountCustodyPythnetPriceAccount,
  TAccountCollateralCustody,
  TAccountCollateralCustodyDovesPriceAccount,
  TAccountCollateralCustodyPythnetPriceAccount,
  TAccountCollateralCustodyTokenAccount,
  TAccountTokenProgram,
  TAccountEventAuthority,
  TAccountProgram
> {
  // Program address.
  const programAddress = config?.programAddress ?? PERPETUALS_PROGRAM_ADDRESS

  // Original accounts.
  const originalAccounts = {
    keeper: { value: input.keeper ?? null, isWritable: false },
    owner: { value: input.owner ?? null, isWritable: true },
    transferAuthority: {
      value: input.transferAuthority ?? null,
      isWritable: false,
    },
    perpetuals: { value: input.perpetuals ?? null, isWritable: false },
    pool: { value: input.pool ?? null, isWritable: true },
    positionRequest: { value: input.positionRequest ?? null, isWritable: true },
    positionRequestAta: {
      value: input.positionRequestAta ?? null,
      isWritable: true,
    },
    position: { value: input.position ?? null, isWritable: true },
    custody: { value: input.custody ?? null, isWritable: true },
    custodyDovesPriceAccount: {
      value: input.custodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    custodyPythnetPriceAccount: {
      value: input.custodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustody: {
      value: input.collateralCustody ?? null,
      isWritable: true,
    },
    collateralCustodyDovesPriceAccount: {
      value: input.collateralCustodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyPythnetPriceAccount: {
      value: input.collateralCustodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustodyTokenAccount: {
      value: input.collateralCustodyTokenAccount ?? null,
      isWritable: true,
    },
    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false },
    eventAuthority: { value: input.eventAuthority ?? null, isWritable: false },
    program: { value: input.program ?? null, isWritable: false },
  }
  const accounts = originalAccounts as Record<
    keyof typeof originalAccounts,
    ResolvedAccount
  >

  // Resolve default values.
  if (!accounts.tokenProgram.value) {
    accounts.tokenProgram.value =
      'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>
  }

  const getAccountMeta = getAccountMetaFactory(programAddress, 'programId')
  const instruction = {
    accounts: [
      getAccountMeta(accounts.keeper),
      getAccountMeta(accounts.owner),
      getAccountMeta(accounts.transferAuthority),
      getAccountMeta(accounts.perpetuals),
      getAccountMeta(accounts.pool),
      getAccountMeta(accounts.positionRequest),
      getAccountMeta(accounts.positionRequestAta),
      getAccountMeta(accounts.position),
      getAccountMeta(accounts.custody),
      getAccountMeta(accounts.custodyDovesPriceAccount),
      getAccountMeta(accounts.custodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustody),
      getAccountMeta(accounts.collateralCustodyDovesPriceAccount),
      getAccountMeta(accounts.collateralCustodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustodyTokenAccount),
      getAccountMeta(accounts.tokenProgram),
      getAccountMeta(accounts.eventAuthority),
      getAccountMeta(accounts.program),
    ],
    programAddress,
    data: getDecreasePosition4InstructionDataEncoder().encode({}),
  } as DecreasePosition4Instruction<
    TProgramAddress,
    TAccountKeeper,
    TAccountOwner,
    TAccountTransferAuthority,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPositionRequest,
    TAccountPositionRequestAta,
    TAccountPosition,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountCollateralCustodyDovesPriceAccount,
    TAccountCollateralCustodyPythnetPriceAccount,
    TAccountCollateralCustodyTokenAccount,
    TAccountTokenProgram,
    TAccountEventAuthority,
    TAccountProgram
  >

  return instruction
}

export type ParsedDecreasePosition4Instruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[],
> = {
  programAddress: Address<TProgram>
  accounts: {
    keeper: TAccountMetas[0]
    owner: TAccountMetas[1]
    transferAuthority: TAccountMetas[2]
    perpetuals: TAccountMetas[3]
    pool: TAccountMetas[4]
    positionRequest: TAccountMetas[5]
    positionRequestAta: TAccountMetas[6]
    position: TAccountMetas[7]
    custody: TAccountMetas[8]
    custodyDovesPriceAccount: TAccountMetas[9]
    custodyPythnetPriceAccount: TAccountMetas[10]
    collateralCustody: TAccountMetas[11]
    collateralCustodyDovesPriceAccount: TAccountMetas[12]
    collateralCustodyPythnetPriceAccount: TAccountMetas[13]
    collateralCustodyTokenAccount: TAccountMetas[14]
    tokenProgram: TAccountMetas[15]
    eventAuthority: TAccountMetas[16]
    program: TAccountMetas[17]
  }
  data: DecreasePosition4InstructionData
}

export function parseDecreasePosition4Instruction<
  TProgram extends string,
  TAccountMetas extends readonly AccountMeta[],
>(
  instruction: Instruction<TProgram> &
    InstructionWithAccounts<TAccountMetas> &
    InstructionWithData<ReadonlyUint8Array>
): ParsedDecreasePosition4Instruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 18) {
    // TODO: Coded error.
    throw new Error('Not enough accounts')
  }
  let accountIndex = 0
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!
    accountIndex += 1
    return accountMeta
  }
  return {
    programAddress: instruction.programAddress,
    accounts: {
      keeper: getNextAccount(),
      owner: getNextAccount(),
      transferAuthority: getNextAccount(),
      perpetuals: getNextAccount(),
      pool: getNextAccount(),
      positionRequest: getNextAccount(),
      positionRequestAta: getNextAccount(),
      position: getNextAccount(),
      custody: getNextAccount(),
      custodyDovesPriceAccount: getNextAccount(),
      custodyPythnetPriceAccount: getNextAccount(),
      collateralCustody: getNextAccount(),
      collateralCustodyDovesPriceAccount: getNextAccount(),
      collateralCustodyPythnetPriceAccount: getNextAccount(),
      collateralCustodyTokenAccount: getNextAccount(),
      tokenProgram: getNextAccount(),
      eventAuthority: getNextAccount(),
      program: getNextAccount(),
    },
    data: getDecreasePosition4InstructionDataDecoder().decode(instruction.data),
  }
}
