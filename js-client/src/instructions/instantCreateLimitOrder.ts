/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBooleanDecoder,
  getBooleanEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  transformEncoder,
  type AccountMeta,
  type AccountSignerMeta,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type Instruction,
  type InstructionWithAccounts,
  type InstructionWithData,
  type ReadonlyAccount,
  type ReadonlySignerAccount,
  type ReadonlyUint8Array,
  type TransactionSigner,
  type WritableAccount,
  type WritableSignerAccount,
} from '@solana/kit'
import { PERPETUALS_PROGRAM_ADDRESS } from '../programs'
import { getAccountMetaFactory, type ResolvedAccount } from '../shared'
import {
  getSideDecoder,
  getSideEncoder,
  type Side,
  type SideArgs,
} from '../types'

export const INSTANT_CREATE_LIMIT_ORDER_DISCRIMINATOR = new Uint8Array([
  194, 37, 195, 123, 40, 127, 126, 156,
])

export function getInstantCreateLimitOrderDiscriminatorBytes() {
  return fixEncoderSize(getBytesEncoder(), 8).encode(
    INSTANT_CREATE_LIMIT_ORDER_DISCRIMINATOR
  )
}

export type InstantCreateLimitOrderInstruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountKeeper extends string | AccountMeta<string> = string,
  TAccountApiKeeper extends string | AccountMeta<string> = string,
  TAccountOwner extends string | AccountMeta<string> = string,
  TAccountFundingAccount extends string | AccountMeta<string> = string,
  TAccountPerpetuals extends string | AccountMeta<string> = string,
  TAccountPool extends string | AccountMeta<string> = string,
  TAccountPosition extends string | AccountMeta<string> = string,
  TAccountPositionRequest extends string | AccountMeta<string> = string,
  TAccountPositionRequestAta extends string | AccountMeta<string> = string,
  TAccountCustody extends string | AccountMeta<string> = string,
  TAccountCustodyDovesPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCustodyPythnetPriceAccount extends
    | string
    | AccountMeta<string> = string,
  TAccountCollateralCustody extends string | AccountMeta<string> = string,
  TAccountInputMint extends string | AccountMeta<string> = string,
  TAccountReferral extends string | AccountMeta<string> = string,
  TAccountTokenProgram extends
    | string
    | AccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountAssociatedTokenProgram extends string | AccountMeta<string> = string,
  TAccountSystemProgram extends
    | string
    | AccountMeta<string> = '11111111111111111111111111111111',
  TAccountEventAuthority extends string | AccountMeta<string> = string,
  TAccountProgram extends string | AccountMeta<string> = string,
  TRemainingAccounts extends readonly AccountMeta<string>[] = [],
> = Instruction<TProgram> &
  InstructionWithData<ReadonlyUint8Array> &
  InstructionWithAccounts<
    [
      TAccountKeeper extends string
        ? ReadonlySignerAccount<TAccountKeeper> &
            AccountSignerMeta<TAccountKeeper>
        : TAccountKeeper,
      TAccountApiKeeper extends string
        ? ReadonlySignerAccount<TAccountApiKeeper> &
            AccountSignerMeta<TAccountApiKeeper>
        : TAccountApiKeeper,
      TAccountOwner extends string
        ? WritableSignerAccount<TAccountOwner> &
            AccountSignerMeta<TAccountOwner>
        : TAccountOwner,
      TAccountFundingAccount extends string
        ? WritableAccount<TAccountFundingAccount>
        : TAccountFundingAccount,
      TAccountPerpetuals extends string
        ? ReadonlyAccount<TAccountPerpetuals>
        : TAccountPerpetuals,
      TAccountPool extends string
        ? ReadonlyAccount<TAccountPool>
        : TAccountPool,
      TAccountPosition extends string
        ? WritableAccount<TAccountPosition>
        : TAccountPosition,
      TAccountPositionRequest extends string
        ? WritableAccount<TAccountPositionRequest>
        : TAccountPositionRequest,
      TAccountPositionRequestAta extends string
        ? WritableAccount<TAccountPositionRequestAta>
        : TAccountPositionRequestAta,
      TAccountCustody extends string
        ? ReadonlyAccount<TAccountCustody>
        : TAccountCustody,
      TAccountCustodyDovesPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyDovesPriceAccount>
        : TAccountCustodyDovesPriceAccount,
      TAccountCustodyPythnetPriceAccount extends string
        ? ReadonlyAccount<TAccountCustodyPythnetPriceAccount>
        : TAccountCustodyPythnetPriceAccount,
      TAccountCollateralCustody extends string
        ? ReadonlyAccount<TAccountCollateralCustody>
        : TAccountCollateralCustody,
      TAccountInputMint extends string
        ? ReadonlyAccount<TAccountInputMint>
        : TAccountInputMint,
      TAccountReferral extends string
        ? ReadonlyAccount<TAccountReferral>
        : TAccountReferral,
      TAccountTokenProgram extends string
        ? ReadonlyAccount<TAccountTokenProgram>
        : TAccountTokenProgram,
      TAccountAssociatedTokenProgram extends string
        ? ReadonlyAccount<TAccountAssociatedTokenProgram>
        : TAccountAssociatedTokenProgram,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      TAccountEventAuthority extends string
        ? ReadonlyAccount<TAccountEventAuthority>
        : TAccountEventAuthority,
      TAccountProgram extends string
        ? ReadonlyAccount<TAccountProgram>
        : TAccountProgram,
      ...TRemainingAccounts,
    ]
  >

export type InstantCreateLimitOrderInstructionData = {
  discriminator: ReadonlyUint8Array
  sizeUsdDelta: bigint
  collateralTokenDelta: bigint
  side: Side
  triggerPrice: bigint
  triggerAboveThreshold: boolean
  counter: bigint
  requestTime: bigint
}

export type InstantCreateLimitOrderInstructionDataArgs = {
  sizeUsdDelta: number | bigint
  collateralTokenDelta: number | bigint
  side: SideArgs
  triggerPrice: number | bigint
  triggerAboveThreshold: boolean
  counter: number | bigint
  requestTime: number | bigint
}

export function getInstantCreateLimitOrderInstructionDataEncoder(): FixedSizeEncoder<InstantCreateLimitOrderInstructionDataArgs> {
  return transformEncoder(
    getStructEncoder([
      ['discriminator', fixEncoderSize(getBytesEncoder(), 8)],
      ['sizeUsdDelta', getU64Encoder()],
      ['collateralTokenDelta', getU64Encoder()],
      ['side', getSideEncoder()],
      ['triggerPrice', getU64Encoder()],
      ['triggerAboveThreshold', getBooleanEncoder()],
      ['counter', getU64Encoder()],
      ['requestTime', getI64Encoder()],
    ]),
    (value) => ({
      ...value,
      discriminator: INSTANT_CREATE_LIMIT_ORDER_DISCRIMINATOR,
    })
  )
}

export function getInstantCreateLimitOrderInstructionDataDecoder(): FixedSizeDecoder<InstantCreateLimitOrderInstructionData> {
  return getStructDecoder([
    ['discriminator', fixDecoderSize(getBytesDecoder(), 8)],
    ['sizeUsdDelta', getU64Decoder()],
    ['collateralTokenDelta', getU64Decoder()],
    ['side', getSideDecoder()],
    ['triggerPrice', getU64Decoder()],
    ['triggerAboveThreshold', getBooleanDecoder()],
    ['counter', getU64Decoder()],
    ['requestTime', getI64Decoder()],
  ])
}

export function getInstantCreateLimitOrderInstructionDataCodec(): FixedSizeCodec<
  InstantCreateLimitOrderInstructionDataArgs,
  InstantCreateLimitOrderInstructionData
> {
  return combineCodec(
    getInstantCreateLimitOrderInstructionDataEncoder(),
    getInstantCreateLimitOrderInstructionDataDecoder()
  )
}

export type InstantCreateLimitOrderInput<
  TAccountKeeper extends string = string,
  TAccountApiKeeper extends string = string,
  TAccountOwner extends string = string,
  TAccountFundingAccount extends string = string,
  TAccountPerpetuals extends string = string,
  TAccountPool extends string = string,
  TAccountPosition extends string = string,
  TAccountPositionRequest extends string = string,
  TAccountPositionRequestAta extends string = string,
  TAccountCustody extends string = string,
  TAccountCustodyDovesPriceAccount extends string = string,
  TAccountCustodyPythnetPriceAccount extends string = string,
  TAccountCollateralCustody extends string = string,
  TAccountInputMint extends string = string,
  TAccountReferral extends string = string,
  TAccountTokenProgram extends string = string,
  TAccountAssociatedTokenProgram extends string = string,
  TAccountSystemProgram extends string = string,
  TAccountEventAuthority extends string = string,
  TAccountProgram extends string = string,
> = {
  keeper: TransactionSigner<TAccountKeeper>
  apiKeeper: TransactionSigner<TAccountApiKeeper>
  owner: TransactionSigner<TAccountOwner>
  fundingAccount: Address<TAccountFundingAccount>
  perpetuals: Address<TAccountPerpetuals>
  pool: Address<TAccountPool>
  position: Address<TAccountPosition>
  positionRequest: Address<TAccountPositionRequest>
  positionRequestAta: Address<TAccountPositionRequestAta>
  custody: Address<TAccountCustody>
  custodyDovesPriceAccount: Address<TAccountCustodyDovesPriceAccount>
  custodyPythnetPriceAccount: Address<TAccountCustodyPythnetPriceAccount>
  collateralCustody: Address<TAccountCollateralCustody>
  inputMint: Address<TAccountInputMint>
  referral?: Address<TAccountReferral>
  tokenProgram?: Address<TAccountTokenProgram>
  associatedTokenProgram: Address<TAccountAssociatedTokenProgram>
  systemProgram?: Address<TAccountSystemProgram>
  eventAuthority: Address<TAccountEventAuthority>
  program: Address<TAccountProgram>
  sizeUsdDelta: InstantCreateLimitOrderInstructionDataArgs['sizeUsdDelta']
  collateralTokenDelta: InstantCreateLimitOrderInstructionDataArgs['collateralTokenDelta']
  side: InstantCreateLimitOrderInstructionDataArgs['side']
  triggerPrice: InstantCreateLimitOrderInstructionDataArgs['triggerPrice']
  triggerAboveThreshold: InstantCreateLimitOrderInstructionDataArgs['triggerAboveThreshold']
  counter: InstantCreateLimitOrderInstructionDataArgs['counter']
  requestTime: InstantCreateLimitOrderInstructionDataArgs['requestTime']
}

export function getInstantCreateLimitOrderInstruction<
  TAccountKeeper extends string,
  TAccountApiKeeper extends string,
  TAccountOwner extends string,
  TAccountFundingAccount extends string,
  TAccountPerpetuals extends string,
  TAccountPool extends string,
  TAccountPosition extends string,
  TAccountPositionRequest extends string,
  TAccountPositionRequestAta extends string,
  TAccountCustody extends string,
  TAccountCustodyDovesPriceAccount extends string,
  TAccountCustodyPythnetPriceAccount extends string,
  TAccountCollateralCustody extends string,
  TAccountInputMint extends string,
  TAccountReferral extends string,
  TAccountTokenProgram extends string,
  TAccountAssociatedTokenProgram extends string,
  TAccountSystemProgram extends string,
  TAccountEventAuthority extends string,
  TAccountProgram extends string,
  TProgramAddress extends Address = typeof PERPETUALS_PROGRAM_ADDRESS,
>(
  input: InstantCreateLimitOrderInput<
    TAccountKeeper,
    TAccountApiKeeper,
    TAccountOwner,
    TAccountFundingAccount,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountPositionRequest,
    TAccountPositionRequestAta,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountInputMint,
    TAccountReferral,
    TAccountTokenProgram,
    TAccountAssociatedTokenProgram,
    TAccountSystemProgram,
    TAccountEventAuthority,
    TAccountProgram
  >,
  config?: { programAddress?: TProgramAddress }
): InstantCreateLimitOrderInstruction<
  TProgramAddress,
  TAccountKeeper,
  TAccountApiKeeper,
  TAccountOwner,
  TAccountFundingAccount,
  TAccountPerpetuals,
  TAccountPool,
  TAccountPosition,
  TAccountPositionRequest,
  TAccountPositionRequestAta,
  TAccountCustody,
  TAccountCustodyDovesPriceAccount,
  TAccountCustodyPythnetPriceAccount,
  TAccountCollateralCustody,
  TAccountInputMint,
  TAccountReferral,
  TAccountTokenProgram,
  TAccountAssociatedTokenProgram,
  TAccountSystemProgram,
  TAccountEventAuthority,
  TAccountProgram
> {
  // Program address.
  const programAddress = config?.programAddress ?? PERPETUALS_PROGRAM_ADDRESS

  // Original accounts.
  const originalAccounts = {
    keeper: { value: input.keeper ?? null, isWritable: false },
    apiKeeper: { value: input.apiKeeper ?? null, isWritable: false },
    owner: { value: input.owner ?? null, isWritable: true },
    fundingAccount: { value: input.fundingAccount ?? null, isWritable: true },
    perpetuals: { value: input.perpetuals ?? null, isWritable: false },
    pool: { value: input.pool ?? null, isWritable: false },
    position: { value: input.position ?? null, isWritable: true },
    positionRequest: { value: input.positionRequest ?? null, isWritable: true },
    positionRequestAta: {
      value: input.positionRequestAta ?? null,
      isWritable: true,
    },
    custody: { value: input.custody ?? null, isWritable: false },
    custodyDovesPriceAccount: {
      value: input.custodyDovesPriceAccount ?? null,
      isWritable: false,
    },
    custodyPythnetPriceAccount: {
      value: input.custodyPythnetPriceAccount ?? null,
      isWritable: false,
    },
    collateralCustody: {
      value: input.collateralCustody ?? null,
      isWritable: false,
    },
    inputMint: { value: input.inputMint ?? null, isWritable: false },
    referral: { value: input.referral ?? null, isWritable: false },
    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false },
    associatedTokenProgram: {
      value: input.associatedTokenProgram ?? null,
      isWritable: false,
    },
    systemProgram: { value: input.systemProgram ?? null, isWritable: false },
    eventAuthority: { value: input.eventAuthority ?? null, isWritable: false },
    program: { value: input.program ?? null, isWritable: false },
  }
  const accounts = originalAccounts as Record<
    keyof typeof originalAccounts,
    ResolvedAccount
  >

  // Original args.
  const args = { ...input }

  // Resolve default values.
  if (!accounts.tokenProgram.value) {
    accounts.tokenProgram.value =
      'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>
  }
  if (!accounts.systemProgram.value) {
    accounts.systemProgram.value =
      '11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>
  }

  const getAccountMeta = getAccountMetaFactory(programAddress, 'programId')
  const instruction = {
    accounts: [
      getAccountMeta(accounts.keeper),
      getAccountMeta(accounts.apiKeeper),
      getAccountMeta(accounts.owner),
      getAccountMeta(accounts.fundingAccount),
      getAccountMeta(accounts.perpetuals),
      getAccountMeta(accounts.pool),
      getAccountMeta(accounts.position),
      getAccountMeta(accounts.positionRequest),
      getAccountMeta(accounts.positionRequestAta),
      getAccountMeta(accounts.custody),
      getAccountMeta(accounts.custodyDovesPriceAccount),
      getAccountMeta(accounts.custodyPythnetPriceAccount),
      getAccountMeta(accounts.collateralCustody),
      getAccountMeta(accounts.inputMint),
      getAccountMeta(accounts.referral),
      getAccountMeta(accounts.tokenProgram),
      getAccountMeta(accounts.associatedTokenProgram),
      getAccountMeta(accounts.systemProgram),
      getAccountMeta(accounts.eventAuthority),
      getAccountMeta(accounts.program),
    ],
    programAddress,
    data: getInstantCreateLimitOrderInstructionDataEncoder().encode(
      args as InstantCreateLimitOrderInstructionDataArgs
    ),
  } as InstantCreateLimitOrderInstruction<
    TProgramAddress,
    TAccountKeeper,
    TAccountApiKeeper,
    TAccountOwner,
    TAccountFundingAccount,
    TAccountPerpetuals,
    TAccountPool,
    TAccountPosition,
    TAccountPositionRequest,
    TAccountPositionRequestAta,
    TAccountCustody,
    TAccountCustodyDovesPriceAccount,
    TAccountCustodyPythnetPriceAccount,
    TAccountCollateralCustody,
    TAccountInputMint,
    TAccountReferral,
    TAccountTokenProgram,
    TAccountAssociatedTokenProgram,
    TAccountSystemProgram,
    TAccountEventAuthority,
    TAccountProgram
  >

  return instruction
}

export type ParsedInstantCreateLimitOrderInstruction<
  TProgram extends string = typeof PERPETUALS_PROGRAM_ADDRESS,
  TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[],
> = {
  programAddress: Address<TProgram>
  accounts: {
    keeper: TAccountMetas[0]
    apiKeeper: TAccountMetas[1]
    owner: TAccountMetas[2]
    fundingAccount: TAccountMetas[3]
    perpetuals: TAccountMetas[4]
    pool: TAccountMetas[5]
    position: TAccountMetas[6]
    positionRequest: TAccountMetas[7]
    positionRequestAta: TAccountMetas[8]
    custody: TAccountMetas[9]
    custodyDovesPriceAccount: TAccountMetas[10]
    custodyPythnetPriceAccount: TAccountMetas[11]
    collateralCustody: TAccountMetas[12]
    inputMint: TAccountMetas[13]
    referral?: TAccountMetas[14] | undefined
    tokenProgram: TAccountMetas[15]
    associatedTokenProgram: TAccountMetas[16]
    systemProgram: TAccountMetas[17]
    eventAuthority: TAccountMetas[18]
    program: TAccountMetas[19]
  }
  data: InstantCreateLimitOrderInstructionData
}

export function parseInstantCreateLimitOrderInstruction<
  TProgram extends string,
  TAccountMetas extends readonly AccountMeta[],
>(
  instruction: Instruction<TProgram> &
    InstructionWithAccounts<TAccountMetas> &
    InstructionWithData<ReadonlyUint8Array>
): ParsedInstantCreateLimitOrderInstruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 20) {
    // TODO: Coded error.
    throw new Error('Not enough accounts')
  }
  let accountIndex = 0
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!
    accountIndex += 1
    return accountMeta
  }
  const getNextOptionalAccount = () => {
    const accountMeta = getNextAccount()
    return accountMeta.address === PERPETUALS_PROGRAM_ADDRESS
      ? undefined
      : accountMeta
  }
  return {
    programAddress: instruction.programAddress,
    accounts: {
      keeper: getNextAccount(),
      apiKeeper: getNextAccount(),
      owner: getNextAccount(),
      fundingAccount: getNextAccount(),
      perpetuals: getNextAccount(),
      pool: getNextAccount(),
      position: getNextAccount(),
      positionRequest: getNextAccount(),
      positionRequestAta: getNextAccount(),
      custody: getNextAccount(),
      custodyDovesPriceAccount: getNextAccount(),
      custodyPythnetPriceAccount: getNextAccount(),
      collateralCustody: getNextAccount(),
      inputMint: getNextAccount(),
      referral: getNextOptionalAccount(),
      tokenProgram: getNextAccount(),
      associatedTokenProgram: getNextAccount(),
      systemProgram: getNextAccount(),
      eventAuthority: getNextAccount(),
      program: getNextAccount(),
    },
    data: getInstantCreateLimitOrderInstructionDataDecoder().decode(
      instruction.data
    ),
  }
}
